/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FoodCarat;

import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.security.SecureRandom;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author mastu
 */
public class adminRegister extends javax.swing.JFrame {
    private String role;
    /**
     * Creates new form adminRegister
     */
    public adminRegister() {
        this("customer");  // Default to "customer" role
    }
    public adminRegister(String role) {
        this.role=role;
        initComponents();
        Lrole.setText(role);
    }

private void clearFields() {
    Admin.clearFields(
        emailtxt,
        usernametxt
    );
}
// Method to check if the email is already registered
private boolean isEmailRegistered(String email) {
    String filename = "user.txt";
    File file = new File(filename);
    if (file.exists()) {
        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(";");
                String existingEmail = parts[0];
                if (existingEmail.equals(email)) {
                    return true; // Email already exists
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error checking email: " + e.getMessage());
        }
    }
    return false; // Email is not registered
}

//Generate sample password
private String generateSamplePassword(String email) {
    final String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%";
    SecureRandom random = new SecureRandom();
    StringBuilder password = new StringBuilder();

    // Extract the part of the email before '@'
    String usernamePart = email.split("@")[0]; // Split at '@' and take the first part

    // Add the username part to the password
    password.append(usernamePart);

    // Append 3 random characters
    for (int i = 0; i < 3; i++) {
        password.append(characters.charAt(random.nextInt(characters.length())));
    }

    return password.toString();
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Lemail = new javax.swing.JLabel();
        emailtxt = new javax.swing.JTextField();
        Lusername = new javax.swing.JLabel();
        usernametxt = new javax.swing.JTextField();
        bRegister = new javax.swing.JButton();
        bBack = new javax.swing.JButton();
        Lrole = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 36)); // NOI18N
        jLabel1.setText("Registration -");

        Lemail.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lemail.setText("Email:");

        emailtxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        emailtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailtxtActionPerformed(evt);
            }
        });

        Lusername.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lusername.setText("User Name: ");

        usernametxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        usernametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernametxtActionPerformed(evt);
            }
        });

        bRegister.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        bRegister.setText("Register");
        bRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegisterActionPerformed(evt);
            }
        });

        bBack.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        bBack.setText("Back");
        bBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackActionPerformed(evt);
            }
        });

        Lrole.setFont(new java.awt.Font("Cooper Black", 0, 36)); // NOI18N
        Lrole.setText("xxxx");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(232, 232, 232)
                                .addComponent(bBack, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lemail)
                                    .addComponent(Lusername))
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(emailtxt)
                                    .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jLabel1)
                        .addGap(59, 59, 59)
                        .addComponent(Lrole)))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Lrole))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lusername)
                    .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lemail)
                    .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bRegister))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailtxtActionPerformed

    private void usernametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernametxtActionPerformed

    private void bRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegisterActionPerformed
    String email = emailtxt.getText().trim();
    String username = usernametxt.getText().trim();
    
    //Validation for email and name
    if (isEmailRegistered(emailtxt.getText().trim())) {
        JOptionPane.showMessageDialog(null, "This email is already registered.");
        emailtxt.requestFocus();
        Admin.clearFields(emailtxt);
        return;
    }
    if (email.isEmpty() || !email.contains("@")) {
        JOptionPane.showMessageDialog(null, "Please enter a valid email.");
        emailtxt.requestFocus();
        return;
    }
    if (username.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Name cannot be empty.");
        usernametxt.requestFocus();
        return;
    }
    // Generate a sample password
    String samplePassword = generateSamplePassword(email);

    try {
        // Write user information to user.txt
        String userFileName = "user.txt";
        File userFile = new File(userFileName);

        try (FileWriter userWriter = new FileWriter(userFile, true)) {
            StringBuilder userInfo = new StringBuilder();
            userInfo.append(email).append(";")
                    .append(username).append(";")
                    .append(samplePassword).append(";")
                    .append(role).append(";;") // to use for update after login such as userBirth and conctNum
                    .append("\n");

            userWriter.write(userInfo.toString());
        }

        // Handle role-specific file creation
        String roleFileName = role + ".txt";
        File roleFile = new File(roleFileName);

        if (!roleFile.exists()) {
            roleFile.createNewFile();
        }

        try (FileWriter roleWriter = new FileWriter(roleFile, true)) {
            roleWriter.write(email + ";;\n");
        }

        JOptionPane.showMessageDialog(null, "Successfully registered as " + role + "!\nYour sample password is: " + samplePassword);
        clearFields(); // Clear input fields after successful registration

    } catch (IOException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_bRegisterActionPerformed

    private void bBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackActionPerformed
        this.dispose();
        new adminMain().setVisible(true);
    }//GEN-LAST:event_bBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminRegister.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminRegister().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lemail;
    private javax.swing.JLabel Lrole;
    private javax.swing.JLabel Lusername;
    private javax.swing.JButton bBack;
    private javax.swing.JButton bRegister;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField usernametxt;
    // End of variables declaration//GEN-END:variables
}
