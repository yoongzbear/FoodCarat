/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FoodCarat;

import java.io.IOException;

/**
 *
 * @author User
 */
public class adminWithdrawCredit extends javax.swing.JFrame {
    private String userFile = "resources/user.txt";
    /**
     * Creates new form adminWithdrawCredit
     */
    public adminWithdrawCredit() {
        initComponents();
        withdrawnumtxt.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                updateNewAmount();
            }

            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                updateNewAmount();
            }

            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                updateNewAmount();
            }
        });
        emailtxt.setEditable(false);
        nametxt.setEditable(false);
        currentamounttxt.setEditable(false);
    }

    private void clearFields() {
        Admin.clearFields(
            emailtxt, nametxt, currentamounttxt, withdrawnumtxt, sumtxt
        );
    }
    
    private void updateNewAmount() {
        try {
            // Get the current amount and top-up amount
            String currentAmountStr = currentamounttxt.getText().trim();
            String withdrawAmountStr = withdrawnumtxt.getText().trim();

            double currentAmount = currentAmountStr.isEmpty() ? 0.0 : Double.parseDouble(currentAmountStr);
            double withdrawAmount = withdrawAmountStr.isEmpty() ? 0.0 : Double.parseDouble(withdrawAmountStr);

            // Check if withdrawal amount is greater than the current amount
            if (!withdrawAmountStr.isEmpty() && withdrawAmount > currentAmount) {
                sumtxt.setText("Insufficient balance for withdrawal");
                return;  // Exit early to prevent further calculations
            }
            
            // Calculate the new amount
            double newAmount = currentAmount- withdrawAmount;

            // Update the sumtxt field
            sumtxt.setText(String.format("%.2f", newAmount));
        } catch (NumberFormatException e) {
            // If the input is invalid, reset the sumtxt field
            sumtxt.setText("Invalid Input");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lsum = new javax.swing.JLabel();
        currentamounttxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        withdrawnumtxt = new javax.swing.JTextField();
        Lsearch = new javax.swing.JLabel();
        sumtxt = new javax.swing.JTextField();
        Lemail = new javax.swing.JLabel();
        withdrawbtn = new javax.swing.JButton();
        searchtxt = new javax.swing.JTextField();
        bback = new javax.swing.JButton();
        emailtxt = new javax.swing.JTextField();
        bsearch = new javax.swing.JButton();
        Lname = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        Lcurrentamount = new javax.swing.JLabel();
        Ltopup = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Lsum.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lsum.setText("Amount after withdraw: ");

        currentamounttxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 36)); // NOI18N
        jLabel1.setText("Withdraw Credit");

        withdrawnumtxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N

        Lsearch.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lsearch.setText("Search:");

        sumtxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        sumtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumtxtActionPerformed(evt);
            }
        });

        Lemail.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lemail.setText("Email:");

        withdrawbtn.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        withdrawbtn.setText("Withdraw");
        withdrawbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawbtnActionPerformed(evt);
            }
        });

        searchtxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N

        bback.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        bback.setText("Back");
        bback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbackActionPerformed(evt);
            }
        });

        emailtxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        emailtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailtxtActionPerformed(evt);
            }
        });

        bsearch.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        bsearch.setText("Search");
        bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsearchActionPerformed(evt);
            }
        });

        Lname.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lname.setText("User Name:");

        nametxt.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N

        Lcurrentamount.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Lcurrentamount.setText("Current Amount: ");

        Ltopup.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        Ltopup.setText("Withdraw Amount:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Ltopup)
                                    .addComponent(Lcurrentamount)
                                    .addComponent(Lsum))
                                .addGap(79, 79, 79)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sumtxt)
                                    .addComponent(currentamounttxt)
                                    .addComponent(withdrawnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Lemail)
                                    .addComponent(Lsearch))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Lname)
                                        .addGap(30, 30, 30)
                                        .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(withdrawbtn)
                        .addGap(248, 248, 248)
                        .addComponent(bback)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(255, 255, 255))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lsearch)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsearch))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lemail)
                    .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lname)
                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lcurrentamount)
                    .addComponent(currentamounttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withdrawnumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ltopup))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Lsum)
                    .addComponent(sumtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withdrawbtn)
                    .addComponent(bback))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sumtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sumtxtActionPerformed

    private void withdrawbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawbtnActionPerformed
        try {
            // Get the current amount and top-up amount from the text fields
            String email = emailtxt.getText().trim();
            String name = nametxt.getText().trim();
            String currentAmountStr = currentamounttxt.getText().trim();
            String withdrawAmountStr = withdrawnumtxt.getText().trim();
            String afterWithdrawAmountStr= sumtxt.getText().trim();

            if (withdrawAmountStr.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter the top-up amount.", "Input Error", javax.swing.JOptionPane.WARNING_MESSAGE);
                withdrawnumtxt.requestFocus();
                return;
            }
            
            if (afterWithdrawAmountStr.equals("Insufficient balance for withdrawal")) {
                javax.swing.JOptionPane.showMessageDialog(this, "Insufficient balance for withdraw!", "Input Error", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }

            double currentAmount = Double.parseDouble(currentAmountStr);
            double topUpAmount = Double.parseDouble(withdrawAmountStr);

            // Confirm before proceeding
            int option = javax.swing.JOptionPane.showConfirmDialog(this,
                String.format("Name: %s\nWithdraw Amount: %.2f\nDo you want to proceed?", name, topUpAmount),
                "Confirm Top-up", javax.swing.JOptionPane.YES_NO_OPTION);

            if (option != javax.swing.JOptionPane.YES_OPTION) {
                return;
            }

            // Process the top-up via Admin class
            Admin admin = new Admin();
            admin.processChangesCredit(email, name, currentAmount, topUpAmount);

            // Clear the fields
            clearFields();

        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please enter valid numbers.", "Input Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } catch (IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_withdrawbtnActionPerformed

    private void bbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbackActionPerformed
        this.dispose();
        new adminMain().setVisible(true);
    }//GEN-LAST:event_bbackActionPerformed

    private void emailtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailtxtActionPerformed

    private void bsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsearchActionPerformed
        String searchEmail = searchtxt.getText().trim();

        User user = new User();

       try {
            String role = user.getRoleByEmail(searchEmail, userFile);

            if (role != null) {
                if(role.equals("vendor")){
                    String data = user.getRoleSpecificData(searchEmail, role, 4);  //vendor credit is at index 4
                    String[] venData = user.performSearch(searchEmail, userFile); //get vendor name

                    emailtxt.setText(venData[0]);
                    currentamounttxt.setText(data);
                    nametxt.setText(venData[1]);
                }else if(role.equals("runner")){
                    String data = user.getRoleSpecificData(searchEmail, role, 3);  //runner credit is at index 3
                    String[] runData = user.performSearch(searchEmail, userFile); //get runner name

                    emailtxt.setText(runData[0]);
                    currentamounttxt.setText(data);
                    nametxt.setText(runData[1]);
                }else if(role.equals("customer")){
                    javax.swing.JOptionPane.showMessageDialog(this, "Admin unable to withdraw customer credit!", "Input Error", javax.swing.JOptionPane.WARNING_MESSAGE);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No matching record found!");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminWithdrawCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminWithdrawCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminWithdrawCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminWithdrawCredit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminWithdrawCredit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lcurrentamount;
    private javax.swing.JLabel Lemail;
    private javax.swing.JLabel Lname;
    private javax.swing.JLabel Lsearch;
    private javax.swing.JLabel Lsum;
    private javax.swing.JLabel Ltopup;
    private javax.swing.JButton bback;
    private javax.swing.JButton bsearch;
    private javax.swing.JTextField currentamounttxt;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField sumtxt;
    private javax.swing.JButton withdrawbtn;
    private javax.swing.JTextField withdrawnumtxt;
    // End of variables declaration//GEN-END:variables
}
