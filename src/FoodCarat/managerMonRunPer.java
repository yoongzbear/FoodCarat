/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FoodCarat;

import java.io.IOException;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class managerMonRunPer extends javax.swing.JFrame {

    /**
     * Creates new form managerMonRunPer
     */
    public managerMonRunPer() {
        initComponents();
    }

    private void displayRunnerPerformance(String selectedMonth) throws IOException {
        Map<String, Runner> performanceDataMap = Manager.getRunnerPerformance(selectedMonth);

        // Assuming you have a JTable set up with columns "RunnerID", "Total Orders", and "Average Rating"
        DefaultTableModel model = (DefaultTableModel) runpertable.getModel();
        model.setRowCount(0);  // Clear previous rows

        for (Map.Entry<String, Runner> entry : performanceDataMap.entrySet()) {
            String runnerID = entry.getKey();
            Runner data = entry.getValue();
        }
        // Populate the table with the new data
        int rowNumber= 1;
        for (Map.Entry<String, Runner> entry : performanceDataMap.entrySet()) {
            String runnerID = entry.getKey();
            Runner data = entry.getValue();            
            
            Admin admin = new Admin();
            String [] runnerName = admin.performSearch(runnerID, "user.txt");
            String name = runnerName[1];
            
            model.addRow(new Object[] {
                rowNumber,
                name,
                data.getTotalOrders(),
                String.format("%.2f", data.getAverageRating())
            });
            rowNumber++;
        }
        
         // Calculate summary total orders and average rating
        int totalOrders = 0;
        double totalAverageRating = 0.0;
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            totalOrders += Integer.parseInt(model.getValueAt(i, 2).toString());
            totalAverageRating += Double.parseDouble(model.getValueAt(i, 3).toString());
        }

        double averageRatingSummary = rowCount > 0 ? totalAverageRating / rowCount : 0.0;

        // Add the summary row
        model.addRow(new Object[]{
            "Total:",
            "",
            totalOrders,
            String.format("%.2f", averageRatingSummary)
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lmonitorrun = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        runpertable = new javax.swing.JTable();
        monthcbx = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Lmonitorrun.setFont(new java.awt.Font("Cooper Black", 0, 36)); // NOI18N
        Lmonitorrun.setText("Monitor Runner Performance");

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 18)); // NOI18N
        jLabel1.setText("Month : ");

        bsearch.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        bsearch.setText("Search");
        bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsearchActionPerformed(evt);
            }
        });

        runpertable.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        runpertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Runner Name", "Total Order", "Average Rating"
            }
        ));
        jScrollPane1.setViewportView(runpertable);

        monthcbx.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        monthcbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Lmonitorrun)
                .addGap(149, 149, 149))
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(monthcbx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bsearch)
                .addGap(94, 94, 94))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Lmonitorrun)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bsearch)
                    .addComponent(monthcbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsearchActionPerformed
        String selectedMonth = monthcbx.getSelectedItem().toString();

        try {
            // Call method to display performance data for the selected month
            displayRunnerPerformance(selectedMonth);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managerMonRunPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managerMonRunPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managerMonRunPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managerMonRunPer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managerMonRunPer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lmonitorrun;
    private javax.swing.JButton bsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> monthcbx;
    private javax.swing.JTable runpertable;
    // End of variables declaration//GEN-END:variables
}
